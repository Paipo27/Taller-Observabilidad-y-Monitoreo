name: üöÄ Deploy App from GitHub Repo to EC2

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: SSH into EC2 and deploy app
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Detectar y usar el gestor de paquetes correcto (apt o yum)
          install() {
            if command -v apt >/dev/null 2>&1; then
              sudo apt update
              sudo apt install -y "$@"
            elif command -v yum >/dev/null 2>&1; then
              sudo yum install -y "$@"
            elif command -v dnf >/dev/null 2>&1; then
              sudo dnf install -y "$@"
            else
              echo "No compatible package manager found."
              exit 1
            fi
          }

          # Instalar git si no existe
          if ! command -v git >/dev/null 2>&1; then
            install git
          fi

          # Instalar docker si no existe
          if ! command -v docker >/dev/null 2>&1; then
            install docker
            sudo systemctl start docker
            sudo systemctl enable docker
          fi

          # Instalar plugin docker compose si no existe
          if ! docker compose version >/dev/null 2>&1; then
            install docker-compose-plugin || install docker-compose  # fallback
          fi

          # A√±adir usuario actual al grupo docker
          sudo usermod -aG docker "$USER" || true

          # Clonar el proyecto si no existe
          cd ~
          if [ ! -d "taller-observabilidad-y-monitoreo" ]; then
            git clone https://github.com/Paipo27/taller-observabilidad-y-monitoreo.git
          fi

          cd ~/taller-observabilidad-y-monitoreo
          git pull origin main

          # Asegurarse de que est√© autenticado para GHCR
          echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u paipo27 --password-stdin

          # Desplegar app
          docker compose pull app
          docker compose up -d app

